apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: {{ .Values.dug.elasticsearch.app_name }}
  name: {{ .Values.dug.elasticsearch.deployment_name }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Values.dug.elasticsearch.app_name }}
  securityContext:
    fsGroup: 1001
  template:
    metadata:
      labels:
        app: {{ .Values.dug.elasticsearch.app_name }}
    spec:
      initContainers:
        - name: sysctl
          image: bitnami/minideb:buster
          imagePullPolicy: Always
          command:
            - /scripts/sysctl.sh
          securityContext:
            privileged: true
          volumeMounts:
            - name: elasticsearch-initcontainer-volume
              mountPath: /scripts/sysctl.sh
              subPath: sysctl.sh
      containers:
      - image: {{ .Values.dug.elasticsearch.image }}:{{ .Values.dug.elasticsearch.image_tag}}
        name: {{ .Values.dug.elasticsearch.app_name }}-container
        env:
        - name: ELASTIC_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Values.dug.secrets.name }}
              key: ELASTIC_PASSWORD
        - name: ES_JAVA_OPTS
          value: "-Xms2g -Xmx2g"
        - name: discovery.type
          value: "single-node"
        - name: xpack.security.enabled
          value: 'true'
        volumeMounts:
        - mountPath: /bitnami/elasticsearch/data
          name: elasticsearch
        ports:
          - containerPort: {{ .Values.dug.elasticsearch.rest_port }}
          - containerPort: {{ .Values.dug.elasticsearch.nodes_com_port }}
      volumes:
      - name: elasticsearch
        persistentVolumeClaim:
          claimName: {{ .Values.dug.elasticsearch.pvc_name }}
      - name: elasticsearch-initcontainer-volume
        configMap:
          name: {{ .Values.dug.elasticsearch.init_config_name }}
          defaultMode: 0755
